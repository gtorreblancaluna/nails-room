<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mx.com.nails_room.dao.VentasDAO">

	<resultMap id="ventaResultMap" type="ventaDTO">
		<result property="ventaId" column="cl_venta" />
		<result property="fechaRegistro" column="fecha_registro" />			
		<result property="descripcion" column="ds_descripcion" />
		<result property="pagoEfectivo" column="es_pago_efectivo" />
		<result property="pagoTarjeta" column="es_pago_tarjeta" />	
		<!-- Datos del cliente -->
		<result property="cliente.clienteId" column="cl_cliente" />
		<result property="cliente.nombre" column="nombre_cliente" />
		<result property="cliente.ap_paterno" column="ap_paterno_cliente" />
		<result property="cliente.ap_materno" column="ap_materno_cliente" />
		<result property="cliente.telefono1" column="telefono1" />
		<result property="cliente.telefono1" column="telefono2" />
		<result property="cliente.direccion" column="direccion_cliente" />
		<!-- Datos del usuario -->
		<result property="usuario.usuarioId" column="cl_usuario" />
		<result property="usuario.nombre" column="nombre_usuario" />
		<result property="usuario.ap_paterno" column="ap_paterno_usuario" />
		<result property="usuario.ap_materno" column="ap_materno_usuario" />
				
		<!-- Datos caja -->
		<result property="caja.cajaId" column="cl_caja" />
		<result property="caja.descripcion" column="descripcion_caja" />
		<result property="caja.fechaApertura" column="fecha_apertura_caja" />
		<!-- Datos estacion trabajo -->
		<result property="estacionTrabajo.estacionTrabajoId" column="cl_estacion_trabajo" />
		<result property="estacionTrabajo.descripcion" column="descripcion_estacion" />	
		<!-- Datos estado venta -->
		<result property="estadoVenta.estadoVentaId" column="cl_estado_venta" />		
		<result property="estadoVenta.descripcion" column="descripcion_estado" />			
	</resultMap>
	
	<resultMap id="ventaDetalleResultMap" type="detalleVentaDTO">
		<result property="detalleVentaId" column="cl_detalle_venta" />
		<result property="ventaId" column="cl_venta" />	
		<result property="articulo.articuloId" column="cl_articulo" />
		<result property="articulo.descripcion" column="descripcion_articulo" />		
		<result property="cantidad" column="cantidad" />	
		<result property="precioArticulo" column="precio_articulo" />
		<result property="ordenEntrada" column="orden_entrada" />		
	</resultMap>
	
	<resultMap id="resultEstacion" type="estacionTrabajoDTO">	
		<result property="estacionTrabajoId" column="cl_estacion_trabajo" />
		<result property="descripcion" column="ds_descripcion" />	
		<result property="activo" column="fg_estado" />
		<result property="orden" column="orden" />
	</resultMap>
	
	<resultMap id="resultEstadoVenta" type="estadoVentaDTO">	
		<result property="estadoVentaId" column="cl_estado_venta" />
		<result property="descripcion" column="ds_descripcion" />	
	
	</resultMap>
	
	<select id="obtenerVentasPorFiltro" parameterType="filtroVentas" resultMap="ventaResultMap">
		SELECT venta.*,
		cliente.nombre AS nombre_cliente,
		cliente.ap_paterno AS ap_paterno_cliente,
		cliente.ap_materno AS ap_materno_cliente,
		cliente.email AS email_cliente,
		usuario.nombre AS nombre_usuario,
		usuario.ap_paterno AS ap_paterno_usuario,
		usuario.ap_materno AS ap_materno_usuario,
		usuario.email AS email_usuario,
		caja.ds_descripcion AS descripcion_caja,
		caja.fecha_apertura AS fecha_apertura_caja,
		estacion.ds_descripcion AS descripcion_estacion,
		estado.ds_descripcion AS descripcion_estado
		FROM c_venta venta
		INNER JOIN c_cliente cliente ON (venta.cl_cliente = cliente.cl_cliente)
		INNER JOIN c_usuario usuario ON (venta.cl_usuario = usuario.cl_usuario)
		INNER JOIN c_caja caja ON (venta.cl_caja = caja.cl_caja)
		INNER JOIN c_estacion_trabajo estacion ON (venta.cl_estacion_trabajo = estacion.cl_estacion_trabajo)
		INNER JOIN c_estado_venta estado ON (venta.cl_estado_venta = estado.cl_estado_venta)
		<where>
			<if test="descripcionFiltro != null and descripcionFiltro != '' ">
				AND venta.ds_descripcion LIKE CONCAT('%',#{descripcionFiltro},'%')
			</if>
			<if test="nombreClienteFiltro != null and nombreClienteFiltro != '' ">
				AND cliente.nombre LIKE CONCAT('%',#{nombreClienteFiltro},'%')
			</if>
			<if test="idUsuarioFiltro != null and idUsuarioFiltro != 0 ">
				AND venta.cl_usuario = #{idUsuarioFiltro}
			</if>	
			<if test="estadoVentaFiltro != null and estadoVentaFiltro != 0 ">
				AND venta.cl_estado_venta = #{estadoVentaFiltro}
			</if>			
			<if	test="fechaInicioFiltro != null and fechaFinFiltro != null and fechaInicioFiltro != '' and fechaFinFiltro != '' ">
				<![CDATA[ 
					AND venta.fecha_registro >= CONCAT(#{fechaInicioFiltro},' 000000') AND venta.fecha_registro <= CONCAT(#{fechaFinFiltro},' 235959')
				]]>
			</if>
			<if	test="fechaInicioFiltro != null and fechaFinFiltro == null and fechaInicioFiltro != '' ">
				<![CDATA[ 
					AND venta.fecha_registro >= CONCAT(#{fechaInicioFiltro},' 000000')
				]]>
			</if>
		</where>		
		ORDER BY venta.cl_venta DESC
	</select>
	
	<select id="obtenerVentaPorId" parameterType="java.lang.Integer" resultMap="ventaResultMap">
		SELECT venta.*,
		cliente.nombre AS nombre_cliente,
		cliente.ap_paterno AS ap_paterno_cliente,
		cliente.ap_materno AS ap_materno_cliente,
		cliente.email AS email_cliente,
		cliente.tel1 AS telefono1,
		cliente.tel2 AS telefono2,
		cliente.direccion AS direccion_cliente,
		usuario.nombre AS nombre_usuario,
		usuario.ap_paterno AS ap_paterno_usuario,
		usuario.ap_materno AS ap_materno_usuario,
		usuario.email AS email_usuario,
		caja.ds_descripcion AS descripcion_caja,
		caja.fecha_apertura AS fecha_apertura_caja,
		estacion.ds_descripcion AS descripcion_estacion,
		estado.ds_descripcion AS descripcion_estado
		FROM c_venta venta
		INNER JOIN c_cliente cliente ON (venta.cl_cliente = cliente.cl_cliente)
		INNER JOIN c_usuario usuario ON (venta.cl_usuario = usuario.cl_usuario)
		INNER JOIN c_caja caja ON (venta.cl_caja = caja.cl_caja)
		INNER JOIN c_estacion_trabajo estacion ON (venta.cl_estacion_trabajo = estacion.cl_estacion_trabajo)
		INNER JOIN c_estado_venta estado ON (venta.cl_estado_venta = estado.cl_estado_venta)
		WHERE venta.cl_venta = #{ventaId}
		ORDER BY venta.cl_venta DESC
	</select>
	
	<select id="obtenerDetalleVentaPorId" parameterType="java.lang.Integer" resultMap="ventaDetalleResultMap">
		SELECT detalle.*, articulo.descripcion AS descripcion_articulo
		FROM k_detalle_venta detalle
		INNER JOIN c_articulo articulo ON (detalle.cl_articulo = articulo.cl_articulo)
		WHERE cl_venta = #{ventaId}
	</select>
	
	<select id="obtenerEstacionesTrabajo" resultMap="resultEstacion" >
		SELECT * FROM c_estacion_trabajo WHERE fg_estado = '1' ORDER BY ds_descripcion
	</select>
	
	<insert id="agregarVenta" parameterType="ventaDTO">
		<selectKey resultType="java.lang.Integer" keyProperty="ventaId" order="AFTER">
			SELECT LAST_INSERT_ID() as id
		</selectKey>
		INSERT INTO c_venta
		(
			cl_cliente,
			cl_usuario,
			cl_caja,
			cl_estacion_trabajo,
			cl_estado_venta,
			ds_descripcion
		)
		VALUES
		(
			#{cliente.clienteId},
			#{usuario.usuarioId},
			#{caja.cajaId},
			#{estacionTrabajo.estacionTrabajoId},
			#{estadoVenta.estadoVentaId},
			#{descripcion}
		)
	</insert>
	
	<insert id="agregarDetalleVenta" parameterType="java.util.Map">
		INSERT INTO k_detalle_venta
		(
			cl_venta,
			cl_articulo,
			cantidad,
			precio_articulo,
			orden_entrada
		)
		VALUES
		(
			#{ventaId},
			#{detalle.articulo.articuloId},
			#{detalle.cantidad},
			#{detalle.precioArticulo},
			#{ordenEntrada}
		)
		
	</insert>
	
	<select id="obtenerUltimoDatoDetalleVenta" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		SELECT orden_entrada FROM k_detalle_venta WHERE cl_venta = #{ventaId} ORDER BY cl_detalle_venta limit 1
	</select>
	
	<update id="actualizarEstadoVenta" parameterType="java.util.Map">
		UPDATE c_venta SET cl_estado_venta = #{estado} WHERE cl_venta = #{ventaId}
	</update>
	
	<select id="obtenerEstadosVenta" resultMap="resultEstadoVenta">
		SELECT * FROM c_estado_venta
	</select>

</mapper>